import java.util.Scanner;
import java.util.List;
import java.util.ArrayList;
import java.io.FileWriter;
import java.io.IOException;

// BankAccount class (Encapsulation + OOP)
class BankAccount {
    private String accountHolder;
    private double balance;
    private List<Transaction> transactions = new ArrayList<>();

    // Constructor
    public BankAccount(String accountHolder, double initialBalance) {
        this.accountHolder = accountHolder;
        this.balance = initialBalance;
    }

    // Deposit method
    public void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            System.out.println("Deposited: Rs." + amount);
            transactions.add(new Transaction("DEPOSIT", amount, balance));
        } else {
            System.out.println(" Invalid deposit amount!");
        }
    }

    // Withdraw method
    public void withdraw(double amount) {
        if (amount > 0 && amount <= balance) {
            balance -= amount;
            System.out.println(" Withdrawn: Rs." + amount);
            transactions.add(new Transaction("WITHDRAW", amount, balance));
        } else if (amount > balance) {
            System.out.println("Insufficient balance!");
        } else {
            System.out.println(" Invalid withdrawal amount!");
        }
    }

    // Check balance method
    public void checkBalance() {
        System.out.println(" Current Balance: Rs." + balance);
    }

    // Display account details
    public void displayAccount() {
        System.out.println("\n--- Account Details ---");
        System.out.println("Account Holder: " + accountHolder);
        System.out.println("Current Balance: Rs." + balance);
    }

    // Export account + transactions as SQL statements into a file
    public void exportToSQL(String filePath) {
        try (FileWriter fw = new FileWriter(filePath)) {
            // Simple schema
            fw.write("-- SQL dump generated by BankingSystem\n");
            fw.write("CREATE TABLE IF NOT EXISTS accounts( id INTEGER PRIMARY KEY AUTOINCREMENT, account_holder TEXT, balance REAL );\n");
            fw.write("CREATE TABLE IF NOT EXISTS transactions( id INTEGER PRIMARY KEY AUTOINCREMENT, account_holder TEXT, type TEXT, amount REAL, balance_after REAL );\n\n");

            // Insert account
            fw.write(String.format("INSERT INTO accounts(account_holder, balance) VALUES('%s', %s);\n", escapeSql(accountHolder), balance));

            // Insert transactions
            for (Transaction t : transactions) {
                fw.write(String.format("INSERT INTO transactions(account_holder, type, amount, balance_after) VALUES('%s', '%s', %s, %s);\n",
                        escapeSql(accountHolder), t.type, t.amount, t.balanceAfter));
            }

            fw.flush();
            System.out.println("SQL export written to: " + filePath);
        } catch (IOException e) {
            System.out.println("Failed to write SQL export: " + e.getMessage());
        }
    }

    private String escapeSql(String s) {
        if (s == null) return "";
        return s.replace("'", "''");
    }
}

// Simple Transaction record
class Transaction {
    String type;
    double amount;
    double balanceAfter;

    Transaction(String type, double amount, double balanceAfter) {
        this.type = type;
        this.amount = amount;
        this.balanceAfter = balanceAfter;
    }
}

// Main class (Handles user input)
public class BankingSystem {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print("Enter account holder name: ");
        String name = sc.nextLine();

    System.out.print("Enter initial balance: \u20B9");
        double balance = sc.nextDouble();

        BankAccount account = new BankAccount(name, balance);
        account.displayAccount();

        while (true) {
            System.out.println("\n=== BANK MENU ===");
            System.out.println("1. Deposit");
            System.out.println("2. Withdraw");
            System.out.println("3. Check Balance");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");
            int choice = sc.nextInt();

            switch (choice) {
                case 1:
                    System.out.print("Enter deposit amount: ₹");
                    double dep = sc.nextDouble();
                    account.deposit(dep);
                    break;

                case 2:
                    System.out.print("Enter withdrawal amount: ₹");
                    double with = sc.nextDouble();
                    account.withdraw(with);
                    break;

                case 3:
                    account.checkBalance();
                    break;

                case 4:
                    System.out.println("Thank you for banking with us!");
                    // Export account and transactions to SQL before exit
                    account.exportToSQL("bank_data.sql");
                    sc.close();
                    System.exit(0);

                default:
                    System.out.println(" Invalid choice! Try again.");
            }
        }
    }
}

